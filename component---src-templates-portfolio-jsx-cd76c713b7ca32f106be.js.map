{"version":3,"sources":["webpack:///./src/components/Common/SimpleWrapper/index.js","webpack:///./src/components/Portfolio/styled.js","webpack:///./src/components/Portfolio/index.jsx","webpack:///./src/templates/Portfolio.jsx"],"names":["SimpleWrapper","styled","div","Wrapper","PortfolioDescription","section","PortfolioImages","PRIMARY_COLOR","Portfolio","data","portfolio","frontmatter","title","images","html","PREFIX","toUpperCase","name","content","dangerouslySetInnerHTML","__html","map","image","includes","key","src","alt","url","require","propTypes","PropTypes","shape","date","object","isRequired","PortfolioTemplate","props","pageQuery"],"mappings":"2FAAA,IAEMA,EAFN,UAEsBC,EAAOC,IAAV,oEAAGD,CAAH,8EAWJD,O,wMCTFG,EAAUF,YAAOD,KAAV,sEAAGC,CAAH,4HAePG,EAAuBH,IAAOI,QAAV,mFAAGJ,CAAH,uRAiCpBK,EAAkBL,IAAOI,QAAV,8EAAGJ,CAAH,waAoCJM,KClFlBC,EAAY,SAAC,GAAD,QAAGC,KAAQC,UAAX,IAAwBC,YAAeC,EAAvC,EAAuCA,MAAOC,EAA9C,EAA8CA,OAAUC,EAAxD,EAAwDA,KAAxD,OAChB,kBAACX,EAAD,KACE,kBAAC,IAAD,KACE,yCACMY,UADN,OACeH,EAAMI,gBAErB,0BAAMC,KAAK,WAAWC,QAAO,UAAKH,UAAL,OAAcH,EAAMI,kBAEnD,kBAACZ,EAAD,KACE,6BAASe,wBAAyB,CAAEC,OAAQN,MAE9C,kBAACR,EAAD,KACGO,EAAOQ,KAAI,SAACC,GACX,GAAIA,EAAMC,SAAS,MACjB,OACE,yBACEC,IAAKF,EACLG,IAAKH,EACLI,IAAKd,IAKX,IAAMe,EAAMC,UAAQ,YAAeN,IAEnC,OACE,yBACEE,IAAKF,EACLG,IAAKE,EACLD,IAAKd,UAQjBJ,EAAUqB,UAAY,CACpBpB,KAAMqB,IAAUC,MAAM,CAAEC,KAAMF,IAAUG,SAAUC,YAGrC1B,QC/Cf,0CAWe2B,UANW,SAAAC,GAAK,OAC7B,kBAAC,IAAWA,EACV,kBAAC,EAAcA,KAFnB,IAQaC,EAAS","file":"component---src-templates-portfolio-jsx-cd76c713b7ca32f106be.js","sourcesContent":["import styled from 'styled-components';\n\nconst SimpleWrapper = styled.div`\n  position: relative;\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n`;\n\nexport default SimpleWrapper;\n","import styled from 'styled-components';\nimport SimpleWrapper from '~/components/Common/SimpleWrapper';\nimport { PRIMARY_COLOR } from '~/components/Common/constants';\n\nexport const Wrapper = styled(SimpleWrapper)`\n  padding: 100px 0 0;\n\n  @media (max-width: 414px) {\n    padding: 70px 16px 0;\n  }\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n`;\n\nexport const PortfolioDescription = styled.section`\n  float: left;\n  padding: 0 0 0 36px;\n  width: 50%;\n\n  @media (max-width: 414px) {\n    float: none;\n    margin: 0 0 16px;\n    padding: 0 0 16px;\n    width: 100%;\n  }\n\n  h1 {\n    margin: 0.67em 0;\n    font-size: 28px;\n  }\n\n  h2 {\n    margin: 0.67em 0;\n    font-size: 20px;\n  }\n\n  ul {\n    margin: 10px 0;\n    padding: 0 0 0 40px;\n    list-style: disc;\n  }\n\n  a {\n    text-decoration: underline;\n  }\n`;\n\nexport const PortfolioImages = styled.section`\n  float: left;\n  padding: 0 36px 0 0;\n  width: 50%;\n  max-height: calc(100vh - 100px);\n  overflow-y: scroll;\n\n  @media (max-width: 414px) {\n    float: none;\n    padding: 0;\n    width: 100%;\n    height: auto;\n    overflow-y: visible;\n  }\n\n  img {\n    padding: 16px;\n    width: 100%;\n    height: auto;\n\n    @media (max-width: 414px) {\n      float: left;\n      margin: 0 0 8px;\n      padding: 0;\n      &:last-child {\n        margin: 0 0 16px;\n      }\n    }\n  }\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 6px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${PRIMARY_COLOR};\n    border-radius: 6px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { PREFIX } from '~/constants';\nimport { Wrapper, PortfolioDescription, PortfolioImages } from './styled';\n\nconst Portfolio = ({ data: { portfolio: { frontmatter: { title, images }, html } } }) => (\n  <Wrapper>\n    <Helmet>\n      <title>\n        {`${PREFIX}${title.toUpperCase()}`}\n      </title>\n      <meta name=\"og:title\" content={`${PREFIX}${title.toUpperCase()}`} />\n    </Helmet>\n    <PortfolioDescription>\n      <section dangerouslySetInnerHTML={{ __html: html }} />\n    </PortfolioDescription>\n    <PortfolioImages>\n      {images.map((image) => {\n        if (image.includes('//')) {\n          return (\n            <img\n              key={image}\n              src={image}\n              alt={title}\n            />\n          );\n        }\n\n        const url = require(`~/resources/${image}`);\n\n        return (\n          <img\n            key={image}\n            src={url}\n            alt={title}\n          />\n        );\n      })}\n    </PortfolioImages>\n  </Wrapper>\n);\n\nPortfolio.propTypes = {\n  data: PropTypes.shape({ date: PropTypes.object }).isRequired,\n};\n\nexport default Portfolio;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '~/components/layout';\nimport Portfolio from '~/components/Portfolio';\n\nconst PortfolioTemplate = props => (\n  <Layout {...props}>\n    <Portfolio {...props} />\n  </Layout>\n);\n\nexport default PortfolioTemplate;\n\nexport const pageQuery = graphql`\n  query PortfolioQuery ($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        homepage\n      }\n    }\n    portfolio: markdownRemark (frontmatter: { path: { eq: $path } }) {\n      id\n      html\n      frontmatter {\n        title\n        images\n        date\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}