{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/components/stories-roll-item.js","webpack:///./src/utils/common.js","webpack:///./src/components/topic-image.js","webpack:///./src/components/stories-roll.js","webpack:///./src/components/topics-bar.js","webpack:///./src/components/topics-cloud.js","webpack:///./src/templates/stories-template.js"],"names":["Pagination","render","className","role","aria-label","to","this","props","previousPagePath","disabled","nextPagePath","Component","StoriesRollItem","post","showDescription","target","href","url","slug","tags","title","replace","split","date","description","topics","defaultProps","TopicImage","query","data","tagNode","allTopicsJson","edges","find","edge","node","topicImageName","image","imageAlt","pathToImage","src","alt","StoriesRoll","posts","map","key","id","renderItem","default","TopicsBar","length","topic","Fragment","kebabCase","TopicCloud","StoriesPage","pageContext","stories","recommendedStories","aria-current","pageQuery"],"mappings":"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","file":"component---src-templates-stories-template-js-6e909ce9a010d78fef26.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nexport default class Pagination extends Component {\n  static propTypes = {\n    previousPagePath: PropTypes.string,\n    nextPagePath: PropTypes.string\n  };\n\n  render() {\n    return (\n      <nav\n        className=\"pagination is-rounded is-medium\"\n        role=\"navigation\"\n        aria-label=\"pagination\"\n      >\n        <Link\n          className=\"pagination-previous\"\n          to={this.props.previousPagePath}\n          disabled={!this.props.previousPagePath}\n        >\n          Previous\n        </Link>\n\n        <Link\n          className=\"pagination-next\"\n          to={this.props.nextPagePath}\n          disabled={!this.props.nextPagePath}\n        >\n          Next\n        </Link>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\nimport TopicImage from \"./topic-image\";\nimport { domainFromURL } from \"../utils/common\";\nimport TopicsBar from \"./topics-bar\";\n\nconst StoriesRollItem = ({ post, showDescription }) => {\n  return (\n    <div className=\"box ar-story\">\n      <OutboundLink className=\"media\" target=\"_blank\" href={post.url}>\n        <div className=\"media-left\">\n          <figure className=\"image is-64x64\">\n            <TopicImage slug={post.tags[0]} />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <div>\n              <strong className=\"post-title\">{post.title}</strong>\n              <br />\n              <small>\n                {domainFromURL(post.url)} &middot; {post.date}\n              </small>\n              <br />\n            </div>\n            <p>{showDescription && post.description}</p>\n          </div>\n        </div>\n      </OutboundLink>\n      <TopicsBar topics={post.tags} />\n    </div>\n  );\n};\nStoriesRollItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  showDescription: PropTypes.bool\n};\n\nStoriesRollItem.defaultProps = {\n  showDescription: true\n};\n\nexport default StoriesRollItem;\n","export const domainFromURL = url => {\n  return url\n    .replace(\"http://\", \"\")\n    .replace(\"https://\", \"\")\n    .replace(\"www.\", \"\")\n    .split(/[/?#]/)[0];\n};\n","import React from \"react\";\nimport { graphql, StaticQuery } from \"gatsby\";\n\nconst TopicImage = ({ slug }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allTopicsJson {\n          edges {\n            node {\n              slug\n              image\n              title\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const tagNode = data.allTopicsJson.edges.find(\n        edge => edge.node.slug === slug\n      );\n\n      const noImageName = \"no_image_available.svg\";\n\n      let topicImageName = tagNode ? tagNode.node.image : noImageName;\n\n      if (topicImageName === \"\" || topicImageName === null) {\n        topicImageName = noImageName;\n      }\n      const imageAlt = tagNode ? tagNode.node.title : \"No Image\";\n\n      const pathToImage = `/img/topics/${topicImageName}`;\n      return (\n        <figure className=\"image\">\n          <img src={pathToImage} alt={imageAlt}></img>\n        </figure>\n      );\n    }}\n  />\n);\nexport default TopicImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StoriesRollItem from \"./stories-roll-item\";\n\nconst StoriesRoll = ({ posts, showDescription }) => {\n  const renderItem = post => {\n    return (\n      <StoriesRollItem\n        post={post}\n        key={post.id}\n        showDescription={showDescription}\n      />\n    );\n  };\n  return <>{posts && posts.map(({ node: post }) => renderItem(post))}</>;\n};\n\nStoriesRoll.default = {\n  showDescription: true\n};\n\nStoriesRoll.propTypes = {\n  posts: PropTypes.array.isRequired,\n  showDescription: PropTypes.bool\n};\n\nexport default StoriesRoll;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { kebabCase } from \"lodash\";\nimport React from \"react\";\n\nconst TopicsBar = ({ topics }) => (\n  <small>\n    <div className=\"tags\">\n      {topics && topics.length\n        ? topics.map(topic => (\n            <React.Fragment key={topic}>\n              <Link\n                className=\"text-capitalize smoothscroll\"\n                to={`/topics/${kebabCase(topic)}/`}\n              >\n                <span className=\"tag\">{topic}</span>\n              </Link>\n            </React.Fragment>\n          ))\n        : null}\n    </div>\n  </small>\n);\n\nTopicsBar.propTypes = {\n  topics: PropTypes.array\n};\n\nexport default TopicsBar;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nfunction TopicCloud({ topics }) {\n  return (\n    <div className=\"column is-3 is-2-widescreen is-hidden-mobile\">\n      <div className=\"tags-widget\">\n        <h4 className=\"title is-4 spanborder has-text-weight-bold\">\n          <span>All Topics</span>\n        </h4>\n        <div className=\"tags\">\n          {topics.map(topic => (\n            <Link to={`/topics/${topic.slug}/`} key={topic.slug}>\n              <span className=\"tag\">{topic.title}</span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TopicCloud;\n","import Layout from \"@components/layout\";\nimport Pagination from \"@components/pagination\";\nimport SEO from \"@components/seo/seo\";\nimport StoriesRoll from \"@components/stories-roll\";\nimport TopicsCloud from \"@components/topics-cloud\";\n\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\n\nfunction StoriesPage({ pageContext, data }) {\n  const { previousPagePath, nextPagePath, topics } = pageContext;\n  const stories = data.recommendedStories.edges;\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Recommended Stories & Blogs\"\n        description=\"Stories & Blogs which nikhil recommends.\"\n        slug=\"\\recommended\\stories\"\n      />\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-9 is-10-widescreen main-loop\">\n              <h4 className=\"title is-4 spanborder has-text-weight-bold\">\n                <span>All Recommended Stories & Blogs</span>\n              </h4>\n              <div className=\"ar-breadcrumb is-hidden-mobile\">\n                <nav className=\"breadcrumb\" aria-label=\"breadcrumbs\">\n                  <ul>\n                    <li>\n                      <Link to={`/`}>Home</Link>\n                    </li>\n                    <li>\n                      <Link to={`/recommended`}>Recommended</Link>\n                    </li>\n                    <li className=\"is-active\">\n                      <a href=\"#\" aria-current=\"page\">\n                      Stories & Blogs\n                      </a>\n                    </li>\n                  </ul>\n                </nav>\n                <nav className=\"bd-prev-next\">\n                  {previousPagePath ? (\n                    <Link to={previousPagePath} title={`previous`}>\n                      ←\n                    </Link>\n                  ) : (\n                    <span>←</span>\n                  )}\n\n                  {nextPagePath ? (\n                    <Link to={nextPagePath} title={`next`}>\n                      →\n                    </Link>\n                  ) : (\n                    <span>→</span>\n                  )}\n                </nav>\n              </div>\n              <StoriesRoll posts={stories} />\n              <Pagination\n                previousPagePath={previousPagePath}\n                nextPagePath={nextPagePath}\n              />\n            </div>\n            <TopicsCloud topics={topics} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default StoriesPage;\n\nexport const pageQuery = graphql`\n  query RecommendedStoriesIndexPageQuery($skip: Int!, $limit: Int!) {\n    recommendedStories: allStoriesJson(\n      sort: { fields: [date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          title\n          date(formatString: \"MMM DD, YYYY\")\n          description\n          id\n          tags\n          url\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}