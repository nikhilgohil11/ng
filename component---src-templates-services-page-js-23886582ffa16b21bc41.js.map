{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/components/topics-bar.js","webpack:///./src/templates/services-page.js","webpack:///./src/components/services-roll.js"],"names":["Pagination","render","className","role","aria-label","to","this","props","previousPagePath","disabled","nextPagePath","Component","TopicsBar","topics","length","map","topic","Fragment","key","kebabCase","RecommendedServicesIndexPage","pageContext","data","services","recommendedServices","edges","title","description","slug","React","pageQuery","ServicesRoll","service","node","id","target","href","url","tags"],"mappings":"0MAIqBA,E,0LAMnBC,OAAA,WACE,OACE,mBACEC,UAAU,kCACVC,KAAK,aACLC,aAAW,cAEX,YAAC,OAAD,CACEF,UAAU,sBACVG,GAAIC,KAAKC,MAAMC,iBACfC,UAAWH,KAAKC,MAAMC,kBAHxB,YAQA,YAAC,OAAD,CACEN,UAAU,kBACVG,GAAIC,KAAKC,MAAMG,aACfD,UAAWH,KAAKC,MAAMG,cAHxB,U,GArBgCC,c,kCCHxC,6DA2BeC,IAvBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAChB,yBACE,mBAAKX,UAAU,QACZW,GAAUA,EAAOC,OACdD,EAAOE,KAAI,SAAAC,GAAK,OACd,YAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACnB,YAAC,OAAD,CACEd,UAAU,+BACVG,GAAE,WAAac,oBAAUH,GAAvB,KAEF,oBAAMd,UAAU,OAAOc,QAI7B,S,kPCZWI,E,0LACnBnB,OAAA,WAAU,IAAD,EACuBK,KAAKC,MAA3Bc,EADD,EACCA,YAAaC,EADd,EACcA,KACbd,EAAmCa,EAAnCb,iBAAkBE,EAAiBW,EAAjBX,aACpBa,EAAWD,EAAKE,oBAAoBC,MAC1C,OACE,YAAC,IAAD,KACE,mBAAKvB,UAAU,aACb,YAAC,IAAD,CACEwB,MAAM,+BACNC,YAAY,qDACZC,KAAK,4BAEP,mBAAK1B,UAAU,WACb,kBAAIA,UAAU,wCACZ,wCAEF,kBAAIA,UAAU,8CACZ,6CAEF,mBAAKA,UAAU,WACb,mBAAKA,UAAU,wBACb,YAAC,IAAD,CAAcqB,SAAUA,IACxB,YAAC,IAAD,CACEf,iBAAkBA,EAClBE,aAAcA,KAGlB,mBAAKR,UAAU,gB,GA5B6B2B,IAAMlB,WAqCnDmB,EAAS,a,kCC5CtB,6DAsCeC,IAjCM,SAAAxB,GAAU,IACrBgB,EAAahB,EAAbgB,SAER,OACE,8BACGA,GACCA,EAASR,KAAI,gBAASiB,EAAT,EAAGC,KAAH,OACX,mBAAK/B,UAAU,MAAMgB,IAAKc,EAAQE,IAChC,mBAAKhC,UAAU,WACb,mBAAKA,UAAU,UACb,kBAAIA,UAAU,cACZ,YAAC,eAAD,CACEA,UAAU,gBACViC,OAAO,SACPC,KAAMJ,EAAQK,KAEbL,EAAQN,MAAO,MAIpB,mBAAKxB,UAAU,YAAY8B,EAAQL,aACnC,YAAC,IAAD,CAAWd,OAAQmB,EAAQM","file":"component---src-templates-services-page-js-23886582ffa16b21bc41.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nexport default class Pagination extends Component {\n  static propTypes = {\n    previousPagePath: PropTypes.string,\n    nextPagePath: PropTypes.string\n  };\n\n  render() {\n    return (\n      <nav\n        className=\"pagination is-rounded is-medium\"\n        role=\"navigation\"\n        aria-label=\"pagination\"\n      >\n        <Link\n          className=\"pagination-previous\"\n          to={this.props.previousPagePath}\n          disabled={!this.props.previousPagePath}\n        >\n          Previous\n        </Link>\n\n        <Link\n          className=\"pagination-next\"\n          to={this.props.nextPagePath}\n          disabled={!this.props.nextPagePath}\n        >\n          Next\n        </Link>\n      </nav>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { kebabCase } from \"lodash\";\nimport React from \"react\";\n\nconst TopicsBar = ({ topics }) => (\n  <small>\n    <div className=\"tags\">\n      {topics && topics.length\n        ? topics.map(topic => (\n            <React.Fragment key={topic}>\n              <Link\n                className=\"text-capitalize smoothscroll\"\n                to={`/topics/${kebabCase(topic)}/`}\n              >\n                <span className=\"tag\">{topic}</span>\n              </Link>\n            </React.Fragment>\n          ))\n        : null}\n    </div>\n  </small>\n);\n\nTopicsBar.propTypes = {\n  topics: PropTypes.array\n};\n\nexport default TopicsBar;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo/seo\";\nimport ServicesRoll from \"../components/services-roll\";\nimport Pagination from \"../components/pagination\";\n\nexport default class RecommendedServicesIndexPage extends React.Component {\n  render() {\n    const { pageContext, data } = this.props;\n    const { previousPagePath, nextPagePath } = pageContext;\n    const services = data.recommendedServices.edges;\n    return (\n      <Layout>\n        <div className=\"container\">\n          <SEO\n            title=\"Recommended Tools & Services\"\n            description=\"Tools & Service providers which nikhil recommends.\"\n            slug=\"\\recommended\\services\"\n          />\n          <div className=\"section\">\n            <h1 className=\"title is-6 has-text-weight-bold mb-4\">\n              <span>Recommended</span>\n            </h1>\n            <h4 className=\"title is-4 has-text-weight-bold spanborder\">\n              <span>Tools & Services</span>\n            </h4>\n            <div className=\"columns\">\n              <div className=\"column is-two-thirds\">\n                <ServicesRoll services={services} />\n                <Pagination\n                  previousPagePath={previousPagePath}\n                  nextPagePath={nextPagePath}\n                ></Pagination>\n              </div>\n              <div className=\"column\"></div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query RecommendedServicesIndexPageQuery($skip: Int!, $limit: Int!) {\n    recommendedServices: allServicesJson(\n      sort: { fields: [date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          title\n          id\n          tags\n          url\n          description\n          image\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\nimport TopicsBar from \"./topics-bar\";\n\nconst ServicesRoll = props => {\n  const { services } = props;\n\n  return (\n    <>\n      {services &&\n        services.map(({ node: service }) => (\n          <div className=\"box\" key={service.id}>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <h4 className=\"title is-4\">\n                  <OutboundLink\n                    className=\"has-text-dark\"\n                    target=\"_blank\"\n                    href={service.url}\n                  >\n                    {service.title}{\" \"}\n                  </OutboundLink>\n                </h4>\n\n                <div className=\"subtitle\">{service.description}</div>\n                <TopicsBar topics={service.tags} />\n              </div>\n            </div>\n          </div>\n        ))}\n    </>\n  );\n};\nServicesRoll.propTypes = {\n  services: PropTypes.array.isRequired\n};\n\nexport default ServicesRoll;\n"],"sourceRoot":""}